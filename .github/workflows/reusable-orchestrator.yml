name: BitBot Orchestrator Waves
on:
  workflow_call:
    inputs:
      waves:
        type: number
        required: true
      wave_size:
        type: number
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  fanout:
    strategy:
      max-parallel: 3
      matrix:
        wave: [${{ fromJson(format('[{0}]', join(steps.mk.outputs.seq,','))) }}]
    runs-on: ubuntu-latest
    concurrency:
      group: bithub-orchestrator-${{ matrix.wave }}
      cancel-in-progress: false
    steps:
      - name: Compute wave sequence
        id: mk
        run: |
          w=${{ inputs.waves }}
          seq=$(python3 - <<'PY
          import os, json
          n=int(os.environ["WAVES"])
          print(",".join(str(i) for i in range(1,n+1)))
          PY
          )
          echo "seq=${seq}" >> $GITHUB_OUTPUT

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install BitBot CLI
        run: |
          curl -sSL https://bithub.example.com/install-bitbot.sh | bash

      - name: Orchestrate wave
        env:
          BITBOT_TOKEN: ${{ secrets.BITBOT_TOKEN }}
        run: |
          bitbot orchestrate \
            --wave "${{ matrix.wave }}" \
            --limit "${{ inputs.wave_size }}" \
            --backpressure "group=bithub,window=60s,max=200" \
            --trace "trace.wave.${{ matrix.wave }}.jsonl"

      - name: Upload wave trace
        uses: actions/upload-artifact@v4
        with:
          name: wave-${{ matrix.wave }}-trace
          path: trace.wave.${{ matrix.wave }}.jsonl
